{"version":3,"sources":["history.js","modules/Login/login.style.js","modules/Login/Login.component.js","api/login.js","constants/index.js","store/actions/actionTypes.js","utilities/index.js","store/actions/login.action.js","modules/Login/Login.container.js","modules/Search/Search.component.style.js","modules/Search/Search.modal.component.style.js","modules/Search/Search.modal.component.js","modules/Search/SearchList.component.js","modules/Search/Search.component.js","api/search.js","store/actions/search.action.js","modules/Search/Search.container.js","routes/index.js","App.js","serviceWorker.js","store/reducers/app.reducer.js","store/reducers/search.reducer.js","store/reducers/index.js","store/index.js","index.js"],"names":["createBrowserHistory","styles","theme","textField","width","button","float","position","display","margin","marginBottom","parent","justifyContent","marginTop","memo","withStyles","props","useState","userName","password","state","setState","errorMessage","setErrorMessage","isLoggedInError","onValidateUser","isLoggedIn","classes","handleChange","value","fieldName","onSubmit","a","Grid","container","className","item","xs","md","Typography","variant","TextField","id","label","error","onChange","e","target","type","style","color","history","push","Box","pt","Button","disabled","isEmpty","onClick","getUser","search","axios","get","searchResponse","data","results","Error","actionTypes","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_SUCCESS","SEARCH_PLANETS_INITIATE","SEARCH_PLANETS_SUCCESS","SEARCH_PLANETS_RESET","SEARCH_PLANETS_LIST_RESET","SEARCH_PLANETS_FAILURE","checkSearchTimes","searchTimes","searchTimeStamp","Date","getTime","checkifValid","loginFailure","validateUserResult","user","dispatch","payload","some","userResult","name","birth_year","validateUser","getState","then","response","catch","onLogoutUser","connect","app","actions","bindActionCreators","LoginActionCreators","searchField","modal","alignItems","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","compose","closeHandler","React","open","setOpen","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Card","CardActionArea","CardContent","gutterBottom","component","planets","openPopup","setOpenPopup","selectedPlanet","setSelectedPlanet","map","idx","key","mb","mt","CardActions","size","console","log","ViewDetails","onSearch","isMaxSearchExeeded","currentUser","debounceOnChange","useCallback","debounce","alert","alignContent","searchPlanets","searchReset","planetListReset","onSearchPlanets","setTimeout","routes","exact","path","LoginContainer","SearchActionCreators","App","CssBaseline","Container","maxWidth","forceRefresh","route","Boolean","window","location","hostname","match","INITIAL_STATE","appReducer","action","currentUSer","showLoader","searchReducer","rootReducer","combineReducers","middleWares","thunk","enhancers","applyMiddleware","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.742a0f21.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","export const styles = theme => ({\n  textField: {\n    width: \"100%\"\n  },\n  button: {\n    float: \"none\",\n    position: \"static\",\n    display: \"block\",\n    margin: \"auto\",\n    width: \"max-content\",\n    marginBottom: \"32\"\n  },\n  parent: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"200px\"\n  }\n});\n\nexport default styles;\n","import React, { useState, memo, useContext } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport history from \"../../history\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles, Box } from \"@material-ui/core\";\nimport styles from \"./login.style\";\nimport isEmpty from \"lodash/isEmpty\";\n\nconst LoginComponent = props => {\n  const [state, setState] = useState({ userName: \"\", password: \"\" });\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  const { isLoggedInError, onValidateUser, isLoggedIn, classes } = props;\n  const { userName, password } = state;\n  const handleChange = (value, fieldName) => {\n    setState({ ...state, [fieldName]: value });\n  };\n\n  const onSubmit = async () => {\n    if (!userName || !password) {\n      setErrorMessage(\"username and password is requried\");\n      return;\n    }\n\n    await onValidateUser(state);\n  };\n\n  return (\n    <>\n      <Grid container className={classes.parent}>\n        <Grid item xs={12} md={7}>\n          <Typography variant=\"h4\">Login</Typography>\n        </Grid>\n        <Grid item xs={12} md={7}>\n          <TextField\n            id=\"user-name\"\n            label=\"username\"\n            className={classes.textField}\n            error={!state.userName && errorMessage}\n            value={userName}\n            onChange={e => handleChange(e.target.value, \"userName\")}\n            margin=\"normal\"\n          />\n        </Grid>\n        <Grid item xs={12} md={7}>\n          <TextField\n            type=\"password\"\n            id=\"password\"\n            label=\"password\"\n            className={classes.textField}\n            error={!state.password && errorMessage}\n            value={password}\n            onChange={e => handleChange(e.target.value, \"password\")}\n            margin=\"normal\"\n          />\n        </Grid>\n        <Grid item xs={12} md={7}>\n          <Typography variant=\"caption\" style={{ color: \"red\" }}>\n            {isLoggedInError\n              ? \"username or password is incorrect\"\n              : errorMessage}\n          </Typography>\n        </Grid>\n        {isLoggedIn && history.push(\"/search\")}\n        <Grid item xs={12} md={7}>\n          <Box pt={2}>\n            <Button\n              disabled={isEmpty(state.userName) || isEmpty(state.password)}\n              className={classes.button}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={onSubmit}\n            >\n              Submit\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default memo(withStyles(styles)(LoginComponent));\n","import axios from \"axios\";\nimport * as API_CONSTANTS from \"./../constants\";\n\nconst getUser = async search => {\n  try {\n    const searchResponse = await axios.get(\n      `${API_CONSTANTS.BASE_URL}${API_CONSTANTS.USER_API_URL}?search=${search}`\n    );\n    return searchResponse.data.results;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n\nexport default getUser;\n","export const BASE_URL = \"https://swapi.co/api\";\nexport const PLANETS_API_URL = \"/planets/\";\nexport const USER_API_URL = \"/people/\";\n\nexport const VALID_UNTIL = 60 * 1000;\nexport const NUMBER_OF_SEARCHES = 15;\n","/**\n * Action types dispatched throughout the app\n */\nexport const actionTypes = {\n  app: {\n    LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\n    LOGIN_FAILURE: \"LOGIN_FAILURE\",\n    LOGOUT_SUCCESS: \"LOGOUT_SUCCESS\"\n  },\n  search: {\n    SEARCH_PLANETS_INITIATE: \"SEARCH_PLANETS_INITIATE\",\n    SEARCH_PLANETS_SUCCESS: \"SEARCH_PLANETS_SUCCESS\",\n    SEARCH_PLANETS_RESET: \"SEARCH_PLANETS_RESET\",\n    SEARCH_PLANETS_LIST_RESET: \"SEARCH_PLANETS_LIST_RESET\",\n    SEARCH_PLANETS_FAILURE: \"SEARCH_PLANETS_FAILURE\"\n  }\n};\n","import { VALID_UNTIL, NUMBER_OF_SEARCHES } from \"../constants\";\nimport some from \"lodash/some\";\n\nexport const checkifValid = searchTimeStamp => {\n  return new Date().getTime() - searchTimeStamp <= VALID_UNTIL;\n};\n\nexport const checkSearchTimes = (searchTimes, searchTimeStamp) => {\n  if (searchTimes === 0) {\n    return true;\n  }\n  // If number of searches more than 15 and time with in 1 minute retrun true\n  if (searchTimes < NUMBER_OF_SEARCHES && checkifValid(searchTimeStamp)) {\n    return true;\n  }\n\n  return false;\n};\n\n//Validate the user\nexport const validateUser = (results, user) => {\n  return some(results, userResult => {\n    return (\n      userResult.name === user.userName &&\n      userResult.birth_year === user.password\n    );\n  });\n};\n","import getUser from \"./../../api/login\";\nimport { actionTypes } from \"./actionTypes\";\nimport { validateUser } from \"./../../utilities\";\n\nconst loginFailure = () => {\n  return {\n    type: actionTypes.app.LOGIN_FAILURE\n  };\n};\n\nconst logout = () => {\n  return {\n    type: actionTypes.app.LOGOUT_SUCCESS\n  };\n};\n\nconst loginSucess = payload => {\n  return {\n    type: actionTypes.app.LOGIN_SUCCESS,\n    payload\n  };\n};\n\nconst validateUserResult = (results, user, dispatch) => {\n  if (validateUser(results, user)) {\n    dispatch(loginSucess(user));\n  } else {\n    dispatch(loginFailure());\n  }\n};\n\nexport const onValidateUser = user => {\n  return (dispatch, getState) => {\n    getUser(user.userName)\n      .then(response => {\n        validateUserResult(response, user, dispatch);\n      })\n      .catch(e => {\n        dispatch(loginFailure());\n      });\n  };\n};\n\nexport const onLogoutUser = () => {\n  return dispatch => {\n    dispatch(logout());\n  };\n};\n","import React, { memo, useState } from \"react\";\n\nimport LoginComponent from \"./Login.component\";\nimport * as LoginActionCreators from \"./../../store/actions/login.action\";\n\nimport { bindActionCreators } from \"redux\";\nimport PropTypes from \"prop-types\";\n\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\n\n// import * as actions from '..';\n\nconst LoginContainer = props => {\n  const {\n    isLoggedInError,\n    actions: { onValidateUser },\n    isLoggedIn\n  } = props;\n  return (\n    <LoginComponent\n      isLoggedIn={isLoggedIn}\n      onValidateUser={onValidateUser}\n      isLoggedInError={isLoggedInError}\n    />\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedInError: state.app.isLoggedInError,\n    isLoggedIn: state.app.isLoggedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    actions: { ...bindActionCreators(LoginActionCreators, dispatch) }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(memo(LoginContainer));\n","export const styles = theme => ({\n  searchField: {\n    width: \"100%\"\n  },\n  button: {\n    marginTop: \"10px\"\n  }\n});\n\nexport default styles;\n","export const styles = theme => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n});\n\nexport default styles;\n","/* eslint-disable react/prop-types */\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport get from \"lodash/get\";\n\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport { withStyles } from \"@material-ui/core\";\nimport styles from \"./Search.modal.component.style\";\nimport { compose } from \"redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst SearchModal = props => {\n  const { classes, closeHandler, value } = props;\n  const [open, setOpen] = React.useState(true);\n\n  const handleClose = () => {\n    setOpen(false);\n    closeHandler();\n  };\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"spring-modal-title\"\n        aria-describedby=\"spring-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500\n        }}\n      >\n        <div className={classes.paper}>\n          <Card>\n            <CardActionArea>\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {get(value, \"name\")}\n                </Typography>\n                <Grid container>\n                  <Grid item xs={6}>\n                    <Typography variant=\"caption\">\n                      Rotation Period : {get(value, \"rotation_period\")}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography variant=\"caption\">\n                      Diameter : {get(value, \"diameter\")}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography variant=\"caption\">\n                      Climate : {get(value, \"climate\")}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography variant=\"caption\">\n                      Gravity : {get(value, \"gravity\")}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography variant=\"caption\">\n                      Surface Water : {get(value, \"surface_water\")}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography variant=\"caption\">\n                      Population : {get(value, \"population\", 0)}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default compose(withStyles(styles))(SearchModal);\n","import React, { memo, useState } from \"react\";\nimport get from \"lodash/get\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SearchModal from \"./Search.modal.component\";\n\nconst SearchListComponent = props => {\n  const { planets } = props;\n  const [openPopup, setOpenPopup] = useState(false);\n  const [selectedPlanet, setSelectedPlanet] = useState(false);\n\n  const handleClose = () => {\n    setOpenPopup(false);\n  };\n\n  const ViewDetails = value => {\n    console.log(value);\n    setSelectedPlanet(value);\n    setOpenPopup(true);\n  };\n\n  return (\n    <>\n      {planets.map((value, idx) => {\n        return (\n          <Box key={`planets-${idx}`} mb={2} mt={2}>\n            <Card>\n              <CardActionArea>\n                <CardContent>\n                  <Typography\n                    gutterBottom\n                    variant={get(value, \"population\", 0) > 100000 ? \"h3\" : \"h5\"}\n                    component=\"h2\"\n                  >\n                    {get(value, \"name\")}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n              <CardActions>\n                <Button\n                  size=\"small\"\n                  color=\"primary\"\n                  onClick={() => {\n                    ViewDetails(value);\n                  }}\n                >\n                  ViewDetails\n                </Button>\n              </CardActions>\n            </Card>\n          </Box>\n        );\n      })}\n      {openPopup && (\n        <SearchModal\n          value={selectedPlanet}\n          closeHandler={handleClose}\n        ></SearchModal>\n      )}\n    </>\n  );\n};\n\nexport default memo(SearchListComponent);\n","import React, { useCallback } from \"react\";\nimport debounce from \"lodash/debounce\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles, Box } from \"@material-ui/core\";\nimport styles from \"./Search.component.style\";\nimport SearchListComponent from \"./SearchList.component\";\nimport { compose } from \"redux\";\nimport history from \"../../history\";\nimport Button from \"@material-ui/core/Button\";\n\nconst SearchComponent = props => {\n  const {\n    onSearch,\n    planets,\n    classes,\n    isMaxSearchExeeded,\n    isLoggedIn,\n    onLogoutUser,\n    currentUser\n  } = props;\n\n  const debounceOnChange = useCallback(debounce(onSearch, 400), []);\n\n  const onLogoutClick = () => {\n    onLogoutUser();\n  };\n\n  return (\n    <>\n      <Grid container>\n        <Grid item xs={12} md={7}>\n          <TextField\n            id=\"searchPlanet\"\n            label=\"Search Planet\"\n            className={classes.searchField}\n            onChange={e => {\n              isMaxSearchExeeded\n                ? alert(\"Maximum 15 searches can do for a minute\")\n                : debounceOnChange(e.target.value, currentUser);\n            }}\n            margin=\"normal\"\n          />\n        </Grid>\n        <Grid item xs={12} md={5} alignContent=\"right\">\n          <Box pt={2}>\n            <Button\n              className={classes.button}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={onLogoutClick}\n            >\n              Logout\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n      {!isLoggedIn && history.push(\"/\")}\n      <SearchListComponent planets={planets} />\n    </>\n  );\n};\n\nexport default compose(withStyles(styles)(SearchComponent));\n","import axios from \"axios\";\nimport * as API_CONSTANTS from \"./../constants\";\n\nconst searchPlanets = async search => {\n  try {\n    const searchResponse = await axios.get(\n      `${API_CONSTANTS.BASE_URL}${API_CONSTANTS.PLANETS_API_URL}?search=${search}`\n    );\n    return searchResponse.data.results;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n\nexport default searchPlanets;\n","import searchPlanets from \"./../../api/search\";\nimport { actionTypes } from \"./actionTypes\";\nimport { checkSearchTimes } from \"./../../utilities\";\nimport { VALID_UNTIL } from \"../../constants\";\nexport const searchReset = () => {\n  return {\n    type: actionTypes.search.SEARCH_PLANETS_RESET\n  };\n};\n\nexport const planetListReset = () => {\n  return {\n    type: actionTypes.search.SEARCH_PLANETS_LIST_RESET\n  };\n};\n\nconst onSearchInitiate = () => {\n  return {\n    type: actionTypes.search.SEARCH_PLANETS_INITIATE\n  };\n};\n\nconst onSearchFailure = () => {\n  return {\n    type: actionTypes.search.SEARCH_PLANETS_FAILURE\n  };\n};\n\nconst onSearchSuccess = payload => {\n  return {\n    type: actionTypes.search.SEARCH_PLANETS_SUCCESS,\n    payload\n  };\n};\n\nexport const onSearchPlanets = (search, currentUser) => {\n  return (dispatch, getState) => {\n    const {\n      search: { searchTimeStamp, searchTimes }\n    } = getState();\n\n    //If search value cleared then reset the planet lists\n    if (search === \"\") {\n      dispatch(planetListReset());\n      return;\n    }\n\n    // only Luke can search 15 times in a minute so we need to validate.\n    if (\n      currentUser.userName !== \"Luke Skywalker\" &&\n      !checkSearchTimes(searchTimes, searchTimeStamp)\n    ) {\n      dispatch(searchReset());\n\n      //Reset the maxsearch list lock after 1 minute\n      setTimeout(\n        () => dispatch(planetListReset()),\n        searchTimeStamp + VALID_UNTIL - new Date().getTime()\n      );\n      return;\n    }\n\n    dispatch(onSearchInitiate());\n    searchPlanets(search)\n      .then(response => {\n        dispatch(onSearchSuccess(response));\n      })\n      .catch(e => {\n        dispatch(onSearchFailure());\n      });\n  };\n};\n","import React, { memo } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport PropTypes from \"prop-types\";\n\nimport { connect } from \"react-redux\";\n\nimport Search from \"./Search.component\";\nimport * as SearchActionCreators from \"./../../store/actions/search.action\";\nimport * as LoginActionCreators from \"./../../store/actions/login.action\";\n\n// import * as actions from '..';\n\nconst SearchContainer = props => {\n  const {\n    actions: { onSearchPlanets, onLogoutUser },\n    planets,\n    isMaxSearchExeeded,\n    isLoggedIn,\n    currentUser\n  } = props;\n\n  return (\n    <Search\n      onSearch={onSearchPlanets}\n      isMaxSearchExeeded={isMaxSearchExeeded}\n      planets={planets}\n      isLoggedIn={isLoggedIn}\n      onLogoutUser={onLogoutUser}\n      currentUser={currentUser}\n    />\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    planets: state.search.planets,\n    isMaxSearchExeeded: state.search.isMaxSearchExeeded,\n    isLoggedIn: state.app.isLoggedIn,\n    currentUser: state.app.currentUser\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    actions: {\n      ...bindActionCreators(SearchActionCreators, dispatch),\n      ...bindActionCreators(LoginActionCreators, dispatch)\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(memo(SearchContainer));\n","import LoginContainer from \"./../modules/Login\";\nimport SearchContainer from \"./../modules/Search\";\n\nexport const routes = [\n  {\n    exact: true,\n    path: \"/\",\n    component: LoginContainer\n  },\n  {\n    exact: true,\n    path: \"/search\",\n    component: SearchContainer\n  }\n];\n","import React from \"react\";\nimport { Router, Route } from \"react-router\";\nimport Container from \"@material-ui/core/Container\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport { routes } from \"./routes\";\nimport history from \"./history\";\n\nconst App = () => {\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth=\"md\">\n        <Router history={history} forceRefresh={true}>\n          {routes.map((route, idx) => (\n            <Route\n              key={idx}\n              exact={route.exact}\n              path={route.path}\n              component={route.component}\n            />\n          ))}\n        </Router>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { actionTypes } from \"./../actions/actionTypes\";\n\nconst INITIAL_STATE = {\n  isLoggedIn: false,\n  currentUser: {},\n  isLoggedInError: false\n};\n\nconst appReducer = (state = INITIAL_STATE, action = {}) => {\n  switch (action.type) {\n    case actionTypes.app.LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        currentUser: action.payload,\n        isLoggedInError: false\n      };\n    case actionTypes.app.LOGIN_FAILURE:\n      return {\n        ...state,\n        isLoggedIn: false,\n        currentUSer: {},\n        isLoggedInError: true\n      };\n    case actionTypes.app.LOGOUT_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: false,\n        currentUSer: {},\n        isLoggedInError: false\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default appReducer;\n","import { actionTypes } from \"./../actions/actionTypes\";\nimport * as SEARCH_CONSTANTS from \"./../../constants\";\n\nconst INITIAL_STATE = {\n  planets: [],\n  searchTimeStamp: \"\",\n  searchTimes: 0,\n  showLoader: false,\n  isMaxSearchExeeded: false\n};\n\nconst searchReducer = (state = INITIAL_STATE, action = {}) => {\n  switch (action.type) {\n    case actionTypes.search.SEARCH_PLANETS_INITIATE:\n      return {\n        ...state,\n        searchTimeStamp:\n          state.searchTimes === 0\n            ? new Date().getTime()\n            : state.searchTimeStamp,\n        searchTimes: state.searchTimes + 1,\n        showLoader: true,\n        isMaxSearchExeeded: false\n      };\n    case actionTypes.search.SEARCH_PLANETS_SUCCESS:\n      return {\n        ...state,\n        planets: action.payload,\n        showLoader: false\n      };\n    case actionTypes.search.SEARCH_PLANETS_FAILURE:\n      return {\n        ...state,\n        showLoader: false\n      };\n    case actionTypes.search.SEARCH_PLANETS_LIST_RESET:\n      return {\n        ...state,\n        planets: [],\n        isMaxSearchExeeded: false\n      };\n    case actionTypes.search.SEARCH_PLANETS_RESET:\n      return {\n        ...state,\n        searchTimeStamp:\n          new Date().getTime() - state.searchTimeStamp >\n          SEARCH_CONSTANTS.VALID_UNTIL\n            ? \"\"\n            : state.searchTimeStamp,\n        searchTimes:\n          new Date().getTime() - state.searchTimeStamp >\n          SEARCH_CONSTANTS.VALID_UNTIL\n            ? 0\n            : state.searchTimes,\n        isMaxSearchExeeded: true\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default searchReducer;\n","import { combineReducers } from \"redux\";\n\nimport appReducer from \"./app.reducer\";\nimport searchReducer from \"./search.reducer\";\n\nconst rootReducer = combineReducers({\n  app: appReducer,\n  search: searchReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nimport rootReducer from \"./reducers\";\n\nconst middleWares = [thunk];\nlet enhancers = applyMiddleware(...middleWares);\n\nif (process.env.NODE_ENV !== \"production\") {\n  middleWares.push(createLogger());\n  enhancers = composeWithDevTools(applyMiddleware(...middleWares));\n}\n\nconst store = createStore(rootReducer, enhancers);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}